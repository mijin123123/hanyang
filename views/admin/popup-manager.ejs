<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>팝업 관리 - 한양에너지 관리자</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/orioncactus/pretendard/dist/web/static/pretendard.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/admin/css/admin.css">
</head>
<body>
    <!-- 사이드바 -->
    <%- include('../partials/admin-sidebar', { currentPage: 'popup-manager' }) %>

    <!-- 메인 컨텐츠 -->
    <div class="main-content">
        <!-- 헤더 -->
        <%- include('../partials/admin-header', { pageTitle: '팝업 관리', user: user }) %>
        
        <!-- 추가 헤더 컨트롤 -->
        <div class="page-controls">
            <div class="controls-left">
                <h2>팝업 목록</h2>
            </div>
            <div class="controls-right">
                <button class="btn btn-primary" onclick="showAddPopupModal()">
                    <i class="fas fa-plus"></i> 새 팝업 추가
                </button>
            </div>
        </div>
        </header>

        <!-- 팝업 관리 컨텐츠 -->
        <div class="dashboard-content">
            <!-- 현재 팝업 목록 -->
            <div class="admin-table">
                <table id="popupTable">
                    <thead>
                        <tr>
                            <th>미리보기</th>
                            <th>팝업 이름</th>
                            <th>생성일</th>
                            <th>상태</th>
                            <th>관리</th>
                        </tr>
                    </thead>
                    <tbody id="popupTableBody">
                        <!-- JavaScript로 동적 생성 -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- 팝업 추가/수정 모달 -->
    <div id="popupModal" class="modal" style="display: none;">
        <div class="modal-content">
            <div class="modal-header">
                <h3 id="modalTitle">새 팝업 추가</h3>
                <button class="modal-close" onclick="hidePopupModal()">&times;</button>
            </div>
            <div class="modal-body">
                <form id="popupForm" class="admin-form">
                    <div class="form-group">
                        <label for="popupName">팝업 이름</label>
                        <input type="text" id="popupName" name="popupName" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="popupImage">팝업 이미지</label>
                        <div class="file-upload" id="fileUploadZone">
                            <div class="file-upload-icon">
                                <i class="fas fa-cloud-upload-alt"></i>
                            </div>
                            <div class="file-upload-text">
                                클릭하거나 파일을 드래그하여 업로드
                                <br>권장 크기: 450px × 509px
                            </div>
                            <input type="file" id="popupImage" name="popupImage" accept="image/*" required>
                        </div>
                        <img id="imagePreview" class="image-preview" style="display: none;">
                    </div>
                    
                    <div class="form-group">
                        <label for="popupLink">링크 URL (선택사항)</label>
                        <input type="url" id="popupLink" name="popupLink" placeholder="https://example.com">
                    </div>
                    
                    <div class="form-group">
                        <label for="popupStatus">상태</label>
                        <select id="popupStatus" name="popupStatus">
                            <option value="active">활성</option>
                            <option value="inactive">비활성</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="hidePopupModal()">취소</button>
                <button type="button" class="btn btn-primary" onclick="savePopup()">저장</button>
            </div>
        </div>
    </div>

    <!-- 모달 오버레이 -->
    <div id="modalOverlay" class="modal-overlay" style="display: none;" onclick="hidePopupModal()"></div>

    <script src="/admin/js/admin.js"></script>
    <script src="/js/auth.js"></script>
    <%- include('../partials/admin-scripts') %>
    <script>
        // 로그인 체크
        checkAdminAuth();
        
        // 관리자 정보 표시
        const currentAdmin = getCurrentAdmin();
        if (currentAdmin) {
            document.getElementById('adminInfo').textContent = `${currentAdmin.name}님 환영합니다`;
        }

        // 팝업 데이터 (서버에서 가져옴)
        let popups = [];
        let editingPopupId = null;

        // 서버에서 팝업 목록 가져오기
        async function loadPopups() {
            try {
                const response = await fetch('/api/admin/popups');
                const result = await response.json();
                
                if (result.success) {
                    popups = result.data;
                    renderPopupTable();
                } else {
                    showAlert('error', '팝업 목록을 불러오는데 실패했습니다.');
                }
            } catch (error) {
                console.error('팝업 목록 로드 오류:', error);
                showAlert('error', '팝업 목록을 불러오는데 실패했습니다.');
            }
        }

        // 팝업 목록 렌더링
        function renderPopupTable() {
            const tbody = document.getElementById('popupTableBody');
            tbody.innerHTML = '';

            if (popups.length === 0) {
                tbody.innerHTML = '<tr><td colspan="5" style="text-align: center; color: #666; padding: 40px;">등록된 팝업이 없습니다.</td></tr>';
                return;
            }

            popups.forEach(popup => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>
                        <img src="${popup.image}" alt="${popup.name}" style="width: 60px; height: 68px; object-fit: cover; border-radius: 5px;">
                    </td>
                    <td>${popup.name}</td>
                    <td>${popup.createdAt}</td>
                    <td>
                        <span class="status-badge ${popup.status === 'active' ? 'status-active' : 'status-inactive'}">
                            ${popup.status === 'active' ? '활성' : '비활성'}
                        </span>
                    </td>
                    <td>
                        <button class="btn btn-warning btn-sm" onclick="editPopup(${popup.id})">
                            <i class="fas fa-edit"></i> 수정
                        </button>
                        <button class="btn btn-danger btn-sm" onclick="deletePopup(${popup.id})">
                            <i class="fas fa-trash"></i> 삭제
                        </button>
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        // 팝업 추가 모달 표시
        function showAddPopupModal() {
            editingPopupId = null;
            document.getElementById('modalTitle').textContent = '새 팝업 추가';
            document.getElementById('popupForm').reset();
            document.getElementById('imagePreview').style.display = 'none';
            document.getElementById('popupImage').required = true;
            showModal();
        }

        // 팝업 수정 모달 표시
        function editPopup(id) {
            editingPopupId = id;
            const popup = popups.find(p => p.id === id);
            
            if (popup) {
                document.getElementById('modalTitle').textContent = '팝업 수정';
                document.getElementById('popupName').value = popup.name;
                document.getElementById('popupLink').value = popup.link || '';
                document.getElementById('popupStatus').value = popup.status;
                document.getElementById('imagePreview').src = popup.image;
                document.getElementById('imagePreview').style.display = 'block';
                document.getElementById('popupImage').required = false;
                showModal();
            }
        }

        // 모달 표시
        function showModal() {
            document.getElementById('popupModal').style.display = 'block';
            document.getElementById('modalOverlay').style.display = 'block';
            document.body.style.overflow = 'hidden';
        }

        // 모달 숨기기
        function hidePopupModal() {
            document.getElementById('popupModal').style.display = 'none';
            document.getElementById('modalOverlay').style.display = 'none';
            document.body.style.overflow = 'auto';
        }

        // 팝업 저장
        async function savePopup() {
            const form = document.getElementById('popupForm');
            if (!validateForm(form)) {
                return;
            }

            const formData = new FormData(form);

            try {
                let response;
                if (editingPopupId) {
                    // 수정
                    response = await fetch(`/api/admin/popups/${editingPopupId}`, {
                        method: 'PUT',
                        body: formData // FormData 직접 전송 (multipart/form-data)
                    });
                } else {
                    // 추가
                    response = await fetch('/api/admin/popups', {
                        method: 'POST',
                        body: formData // FormData 직접 전송 (multipart/form-data)
                    });
                }

                const result = await response.json();
                
                if (result.success) {
                    showAlert('success', result.message);
                    hidePopupModal();
                    loadPopups(); // 목록 새로고침
                } else {
                    showAlert('error', result.message);
                }
            } catch (error) {
                console.error('팝업 저장 오류:', error);
                showAlert('error', '팝업 저장 중 오류가 발생했습니다.');
            }
        }

        // 팝업 삭제
        async function deletePopup(id) {
            if (!confirm('이 팝업을 삭제하시겠습니까?')) {
                return;
            }

            try {
                const response = await fetch(`/api/admin/popups/${id}`, {
                    method: 'DELETE'
                });

                const result = await response.json();
                
                if (result.success) {
                    showAlert('success', result.message);
                    loadPopups(); // 목록 새로고침
                } else {
                    showAlert('error', result.message);
                }
            } catch (error) {
                console.error('팝업 삭제 오류:', error);
                showAlert('error', '팝업 삭제 중 오류가 발생했습니다.');
            }
        }

        // Helper 함수들
        function validateForm(form) {
            const formData = new FormData(form);
            const name = formData.get('popupName');
            const image = formData.get('popupImage');
            
            if (!name || name.trim() === '') {
                showAlert('error', '팝업 이름을 입력해주세요.');
                return false;
            }
            
            if (!editingPopupId && (!image || image.size === 0)) {
                showAlert('error', '팝업 이미지를 선택해주세요.');
                return false;
            }
            
            return true;
        }

        function showAlert(type, message) {
            // 간단한 알림 표시
            if (type === 'success') {
                alert('✅ ' + message);
            } else {
                alert('❌ ' + message);
            }
        }

        function handleFileUpload(fileInput, imagePreview) {
            fileInput.addEventListener('change', function(e) {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        imagePreview.src = e.target.result;
                        imagePreview.style.display = 'block';
                    };
                    reader.readAsDataURL(file);
                }
            });
        }

        function setupDragDrop(dropZone, fileInput) {
            dropZone.addEventListener('click', () => fileInput.click());
            
            dropZone.addEventListener('dragover', (e) => {
                e.preventDefault();
                dropZone.style.borderColor = '#007bff';
            });
            
            dropZone.addEventListener('dragleave', (e) => {
                e.preventDefault();
                dropZone.style.borderColor = '#ddd';
            });
            
            dropZone.addEventListener('drop', (e) => {
                e.preventDefault();
                dropZone.style.borderColor = '#ddd';
                
                const files = e.dataTransfer.files;
                if (files.length > 0) {
                    fileInput.files = files;
                    fileInput.dispatchEvent(new Event('change'));
                }
            });
        }

        // 초기화
        document.addEventListener('DOMContentLoaded', function() {
            loadPopups(); // 서버에서 팝업 목록 로드
            
            // 파일 업로드 설정
            const fileInput = document.getElementById('popupImage');
            const fileUploadZone = document.getElementById('fileUploadZone');
            const imagePreview = document.getElementById('imagePreview');
            
            handleFileUpload(fileInput, imagePreview);
            setupDragDrop(fileUploadZone, fileInput);
        });
    </script>

    <style>
        /* 모달 스타일 */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 1001;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1000;
        }

        .modal-content {
            background: white;
            border-radius: 10px;
            max-width: 500px;
            width: 90%;
            max-height: 90vh;
            overflow-y: auto;
            z-index: 1002;
        }

        .modal-header {
            padding: 20px;
            border-bottom: 1px solid #eee;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-header h3 {
            margin: 0;
            color: #2c3e50;
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: #7f8c8d;
        }

        .modal-body {
            padding: 20px;
        }

        .modal-footer {
            padding: 20px;
            border-top: 1px solid #eee;
            display: flex;
            justify-content: flex-end;
            gap: 10px;
        }

        /* 상태 배지 */
        .status-badge {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 500;
        }

        .status-active {
            background: #d4edda;
            color: #155724;
        }

        .status-inactive {
            background: #f8d7da;
            color: #721c24;
        }

        /* 버튼 크기 */
        .btn-sm {
            padding: 5px 10px;
            font-size: 12px;
            margin-right: 5px;
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-secondary:hover {
            background: #5a6268;
        }

        /* 파일 업로드 스타일 */
        .file-upload {
            border: 2px dashed #ddd;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            cursor: pointer;
            transition: border-color 0.3s ease;
            position: relative;
            background: #fafafa;
        }

        .file-upload:hover {
            border-color: #007bff;
            background: #f0f8ff;
        }

        .file-upload-icon {
            font-size: 32px;
            color: #007bff;
            margin-bottom: 10px;
        }

        .file-upload-text {
            color: #666;
            font-size: 14px;
            line-height: 1.4;
        }

        .file-upload input[type="file"] {
            position: absolute;
            opacity: 0;
            width: 100%;
            height: 100%;
            cursor: pointer;
        }

        .image-preview {
            max-width: 200px;
            max-height: 150px;
            margin-top: 10px;
            border-radius: 5px;
            border: 1px solid #ddd;
        }

        /* 관리자 정보 스타일 */
        .admin-info {
            color: #2c3e50;
            font-weight: 500;
            margin-right: 15px;
            padding: 8px 12px;
            background: rgba(52, 152, 219, 0.1);
            border-radius: 5px;
            border: 1px solid rgba(52, 152, 219, 0.2);
        }
    </style>
</body>
</html>
